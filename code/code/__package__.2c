if false:
    var declare = __module__().declare
    func place_types(types_name, ?module_name):
        var module = Module("code.{}".format(types_name))
        declare(types_name, module, Module)

        print("do it")
        print(native)
        native("builtins.print(2)")
        var types = native("""
            builtins.print(2)
            x = getattr(c, s.types_name)
            print(type(x))
            print(x.keys())
            x = dict(x)
            print(x, type(x))
        """)
        var types = native("ret(w@ dict(getattr(c, s.types_name)))")
        for name, obj in types.items():
            module.declare(name, obj, obj.__type__)

    place_types("objects")
    place_types("basic_types")
    place_types("operators")
    place_types("node_types")
    place_types("scope_types", "scope")
    place_types("exc_types", "exc")
    place_types("builtins")